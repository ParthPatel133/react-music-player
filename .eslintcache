[{"G:\\projects\\react projects\\react-music-player\\src\\reportWebVitals.js":"1","G:\\projects\\react projects\\react-music-player\\src\\index.js":"2","G:\\projects\\react projects\\react-music-player\\src\\App.js":"3","G:\\projects\\react projects\\react-music-player\\src\\components\\Song.js":"4","G:\\projects\\react projects\\react-music-player\\src\\components\\Player.js":"5","G:\\projects\\react projects\\react-music-player\\src\\data.js":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":478,"mtime":1606497360169,"results":"9","hashOfConfig":"8"},{"size":586,"mtime":1606623443996,"results":"10","hashOfConfig":"8"},{"size":280,"mtime":1606565390789,"results":"11","hashOfConfig":"8"},{"size":1678,"mtime":1606626022196,"results":"12","hashOfConfig":"8"},{"size":2575,"mtime":1606544024342,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"4prmp4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\projects\\react projects\\react-music-player\\src\\reportWebVitals.js",[],["30","31"],"G:\\projects\\react projects\\react-music-player\\src\\index.js",[],["32","33"],"G:\\projects\\react projects\\react-music-player\\src\\App.js",["34","35"],"import React, { useState } from 'react'\nimport './styles/app.scss';\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport data from './data'\n\nfunction App() {\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong} />\n      <Player isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong} />\n    </div>\n  );\n}\n\nexport default App;\n","G:\\projects\\react projects\\react-music-player\\src\\components\\Song.js",["36"],"G:\\projects\\react projects\\react-music-player\\src\\components\\Player.js",["37"],"import { useRef, useState } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Player = ({ currentSong, isPlaying, setIsPlaying }) => {\r\n    //Ref setting\r\n    const audioRef = useRef(null);\r\n\r\n    //state\r\n    const [songInfo, setSongInfo] = useState({\r\n        currentTime: null,\r\n        duration: null\r\n    });\r\n\r\n    //Event Handelers\r\n    const timeUpdateHandler = (e) => {\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        setSongInfo({ currentTime: current, duration });\r\n    }\r\n\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='player'>\r\n            <div className='time-control'>\r\n                <p>Start time</p>\r\n                <input type='range' />\r\n                <p>End time</p>\r\n            </div>\r\n            <div className='play-control'>\r\n                <FontAwesomeIcon className='skip-back' size=\"2x\" icon={faAngleLeft} />\r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler}\r\n                    className='play' size=\"2x\" icon={faPlay} />\r\n                <FontAwesomeIcon className='skip-forward' size=\"2x\" icon={faAngleRight} />\r\n            </div>\r\n            <audio onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","G:\\projects\\react projects\\react-music-player\\src\\data.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":9,"column":17,"nodeType":"46","messageId":"47","endLine":9,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":10,"column":23,"nodeType":"46","messageId":"47","endLine":10,"endColumn":37},{"ruleId":"49","severity":1,"message":"50","line":6,"column":13,"nodeType":"51","endLine":6,"endColumn":42},{"ruleId":"44","severity":1,"message":"52","line":11,"column":12,"nodeType":"46","messageId":"47","endLine":11,"endColumn":20},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],"no-unused-vars","'setSongs' is assigned a value but never used.","Identifier","unusedVar","'setCurrentSong' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'songInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]